#!/usr/bin/env python

# Author: CristiÃ¡n Maureira
# Created: 16.06.2014
# Updated: 14.03.2018

import sys
import logging
from subprocess import run, PIPE, CalledProcessError

logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)

def execute_command(cmd, ret=True):

    try:
        result = run(cmd, shell=True, check=True, stdout=PIPE)
    except CalledProcessError:
        result = None
        logging.error("Something is wrong with the command: {}".format(cmd))

    result = result.stdout.strip().decode("utf-8") if ret else None

    return result

def get_current_brightness(directory):
    cmd = "cat /sys/class/backlight/{}/actual_brightness".format(directory)
    return execute_command(cmd)

def get_connected_device():
    cmd = "xrandr -q | grep '\ connected' | awk '{print $1}'"
    return execute_command(cmd)

def change_brightness(current, option, max_brightness, directory):
    device = get_connected_device()
    value = float(current)/max_brightness
    no_change = False

    if option == "-":
        value -= 0.05
    elif option == "+":
        value += 0.05
    elif option == "":
        print("{0:.2f}".format(value))
        no_change = True
    else:
        value = float(option)

    if not no_change:
        value = 1.0 if value > 1.0 else value
        value = 0.05 if value <= 0.05 else value
        value = int(value*max_brightness)


        cmd = "echo {} > /sys/class/backlight/{}/brightness".format(value, directory)
        execute_command(cmd, ret=False)

def check_number(option, max_brightness):
    result = False
    try:
        option = float(option)
        if 0 < option <= 1:
            result = True
        else:
            logging.error("Wrong argument, use number between 0 and 1")
    except:
        logging.error("Couldn't convert option to float")

    return result


if __name__ == "__main__":

    option = sys.argv[1] if len(sys.argv) > 1 else ""

    cmd = "ls /sys/class/backlight/"
    directory = execute_command(cmd)

    cmd = "cat /sys/class/backlight/{}/max_brightness".format(directory)
    max_brightness = float(execute_command(cmd))
    if not max_brightness:
        max_brightness = 100


    current = get_current_brightness(directory)
    if current:
        if option in  ["", "-", "+"] or check_number(option, max_brightness):
            change_brightness(current, option, max_brightness, directory)
        else:
            logging.error("Option required ('-', '+' or 'number[0-1]')")
