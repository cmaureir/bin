#!/usr/bin/env python

# Author: Cristi√°n Maureira
# Created: 16.06.2014
# Updated: 14.03.2018

import sys
import logging
from subprocess import run, PIPE, CalledProcessError

logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)

def get_current_brightness():
    cmd = "xrandr --verbose | grep Brightness | awk '{print $2}'"
    try:
        result = run(cmd, shell=True, check=True, stdout=PIPE)
        result = result.stdout.strip().decode("utf-8")
    except CalledProcessError:
        result = None
    return result

def get_connected_device():
    cmd = "xrandr -q | grep '\ connected' | awk '{print $1}'"
    try:
        device = run(cmd, shell=True, check=True, stdout=PIPE)
        device = device.stdout.strip().decode("utf-8")
    except CalledProcessError:
        device = None
    return device

def change_brightness(current, option):
    device = get_connected_device()
    value = float(current)

    if 0.1 <= value <= 1.0:
        if option == "-":
            value -= 0.1
        elif option == "+":
            value += 0.1
        elif option == "":
            print(int(value*100))
        else:
            value = float(option)
            if 1 < value <= 100:
                value /= 100

    cmd = "xrandr --output {0} --brightness {1:.2f}".format(device, value)
    try:
        result = run(cmd.split(), check=True, stdout=PIPE)
    except CalledProcessError:
        logging.error("Something is wrong with the command: {}".format(cmd))

def check_number(option):
    result = False
    try:
        option = float(option)
        if 0 <= option <= 100:
            result = True
        else:
            logging.error("Wrong argument, use number between 0 and 1")
    except:
        logging.error("Couldn't convert option to float")

    return result

if __name__ == "__main__":

    option = sys.argv[1] if len(sys.argv) > 1 else ""

    current = get_current_brightness()
    if current:
        if option in  ["", "-", "+"] or check_number(option):
            change_brightness(current, option)
        else:
            logging.error("Option required ('-', '+' or 'number[0-1]')")
